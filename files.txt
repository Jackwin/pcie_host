ALTERA PCI Dev Kit directory contents:

LIB\ALTERA_LIB.C - Implementation of ALTERA_LIB.H.

LIB\ALTERA_LIB.H - Library for 'WinDriver for Altera' API. 
    The basic idea is to get a handle for the board
    with ALTERA_Open() and use it in the rest of the program
    when calling ALTERA_xxxx() functions.  Call ALTERA_Close() when done.

DIAG\ALTERA_DIAG.C - A simple diagnostics program that lets you access the
    Altera registers and local memory. 
    o This program is meant to be used as an example for using the ALTERA_LIB.H API,
      you may use it as a skeleton for your driver, or 'cut & paste' parts
      of it into your device driver code.


      The source code for this project was generated by WinDriver Wizard.
To compile this application, you will need a Win32 compiler.

Files:
  lib directory:
  lib\ALTERA_lib.c
      Library for 'WinDriver for ALTERA' API. 
      The basic idea is to get a handle for the board
      with ALTERA_Open() and use it in the rest of the program
      when calling ALTERA_xxxx() functions.  Call ALTERA_Close() when done.
  lib\ALTERA_lib.h
      Header file of ALTERA_lib.c library.

  diag directory:
  diag\ALTERA_diag.c
      A simple diagnostics program that lets you access the
      Altera registers and local memory. 
      o This program is meant to be used as an example for using the 
        ALTERA_lib.h API.
        You may use it as a skeleton for your driver, or 'cut & paste' 
        parts of it into your device driver code.

  diag\ALTERA_diag.mak
      MS-Visual C++ 4.0 (and above) compatible make file.
  diag\ALTERA_diag.mdp
      MS-Visual C++ 4.0 (and above) compatible project file.
  files.txt
      Describes the files generated.

Compiling this project:
  If you are using MS-Visual C++, then open the ALTERA_diag.mdp project file, and
  compile.

  If using a different compiler:
  - Create a new project. Choose console mode project.
  - Include the following files in the project:
      lib\ALTERA_lib.c
      diag\ALTERA_diag.c
      \windrvr\samples\shared\pci_diag_lib.c
      \windrvr\samples\shared\print_struct.c

Converting to a GUI application:
  This sample was written as a console mode application (rather than
  a GUI application) that uses standard input and standard output.
  This was done in order to simplify the source code. You may change it
  into a GUI application by removing all calls to printf() and scanf()
  functions, and calling MessageBox() instead.

